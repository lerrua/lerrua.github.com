<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: python | /lerrua]]></title>
  <link href="http://lerrua.github.io/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://lerrua.github.io/"/>
  <updated>2015-02-09T12:27:36-02:00</updated>
  <id>http://lerrua.github.io/</id>
  <author>
    <name><![CDATA[Igor P. Leroy]]></name>
    <email><![CDATA[ip.leroy@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Redimensionando imagens com Python]]></title>
    <link href="http://lerrua.github.io/blog/2014/07/02/redimensionando-imagens-com-python/"/>
    <updated>2014-07-02T21:18:00-03:00</updated>
    <id>http://lerrua.github.io/blog/2014/07/02/redimensionando-imagens-com-python</id>
    <content type="html"><![CDATA[<p>Nós programadores perdemos um tempo tentando mexer em programas de edição de imagem como Photoshop e Gimp para
quebrar algum galho, tarefas bobas como redimensionar uma imagem para um determinado tamanho sem perder a qualidade por exemplo.</p>

<p>Perda de tempo maior ainda seria se fossem 20 ou 30 imagens, imaginem? Pois é.</p>

<p>Sorte que com python podemos automatizar esse trabalho com apenas algumas linhas de código.</p>

<p><code>
pip install Pillow
</code></p>

<p>Pillow é um fork mantido pela comunidade da PIL (Python Image Library), é com ela que vamos fazer essa brincadeira.</p>

<p>```python
import PIL</p>

<h1>Queremos gerar uma imagem com tamanho 300x200</h1>

<p>wsize = 300
hsize = 200</p>

<p>img = PIL.Image.open(&lsquo;/path/to/original_picture.png&rsquo;)</p>

<h1>redimensionamos sem perder a qualidade</h1>

<p>img = img.resize((wsize, hsize), PIL.Image.ANTIALIAS)
img.save(&lsquo;/path/to/new_img.png&rsquo;)
```</p>

<p>Pronto! Sua <code>new_img.png</code> foi gerada na pasta que apontou acima.</p>

<p>Quanto ao problema que citei no começo desse post, é uma solução bastante simples. Vamos apenas iterar esse código acima, mais ou menos assim:</p>

<p>```python</p>

<h1>Vamos supor que esses são os nomes das imagens</h1>

<p>IMGS = [</p>

<pre><code>'original_img_1',
'original_img_2',
'original_img_3',
'original_img_4',
</code></pre>

<p>]</p>

<p>for i in IMGS:</p>

<pre><code>wsize = 300
hsize = 200
img = PIL.Image.open('/path/to/{}.png'.format(i))
img = img.resize((wsize, hsize), PIL.Image.ANTIALIAS)
# na pasta /thumbs será gerada a imagem com mesmo 
# nome que a imagem original.
img.save('/path/to/thumbs/{}.png'.format(i))
</code></pre>

<p>```</p>

<p>E é isso, se pensarmos em número de 20 imagens então acabamos de economizar um precioso tempo que seria gasto com um trabalho bem chato e repetitivo.</p>
]]></content>
  </entry>
  
</feed>
